<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cyberblack.net</title><link>http://dev.cyberblack.net/</link><description>Recent content on Cyberblack.net</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 19 Oct 2017 15:26:15 +0000</lastBuildDate><atom:link href="http://dev.cyberblack.net/index.xml" rel="self" type="application/rss+xml"/><item><title>1.Ansible Environment Construction - SSH</title><link>http://dev.cyberblack.net/chapter3/chapter3-3/ansible-environment-construction-sshd/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter3/chapter3-3/ansible-environment-construction-sshd/</guid><description>SSH設定変更手順 ansible-host作業 1.元ファイルのバックアップ # cp -p /etc/ssh/sshd_config /etc/ssh/sshd_config.org 2.sshd_configの設定変更 # vim /etc/ssh/sshd_config -------</description></item><item><title>1.Docker Environment Construction - Docker</title><link>http://dev.cyberblack.net/chapter3/chapter3-4/docker-environment-construction-docker/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter3/chapter3-4/docker-environment-construction-docker/</guid><description>Dockerインストール 1.インストールスクリプトのダウンロード # curl -fsSL get.docker.com -o get-docker.sh 2.スクリプトの実行 # sh get-docker.sh # Executing docker install script, commit: 442e66405c304fa92af8aadaa1d9b31bf4b0ad94 + sh -c apt-get update -qq &amp;gt;/dev/null + sh -c DEBIAN_FRONTEND=noninteractive apt-get</description></item><item><title>1.Docker Environment Construction - Docker Compose</title><link>http://dev.cyberblack.net/chapter3/chapter3-5/docker-environment-construction-docker-compose/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter3/chapter3-5/docker-environment-construction-docker-compose/</guid><description>Docker Composeのインストール 1.jqのインストール # apt -y install jq Reading package lists... Done Building dependency tree Reading state information... Done The following additional packages will be installed: libjq1 libonig4 The following NEW packages will be installed: jq libjq1 libonig4 0 upgraded, 3 newly installed, 0 to remove and</description></item><item><title>1.ECCUBE Environment Construction - Apache Web Server</title><link>http://dev.cyberblack.net/chapter3/chapter3-2/eccube-environment-construction-httpd/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter3/chapter3-2/eccube-environment-construction-httpd/</guid><description>Apache Web Serverのインストール手順 1.httpdのインストール # yum -y install httpd Loaded plugins: fastestmirror Determining fastest mirrors epel/x86_64/metalink | 5.9 kB 00:00 * epel: nrt.edge.kernel.org base | 3.6 kB 00:00 epel | 4.7 kB 00:00 extras | 2.9 kB 00:00 updates | 2.9 kB 00:00</description></item><item><title>1.ECCUBE Environment Construction - MariaDB</title><link>http://dev.cyberblack.net/chapter3/chapter3-2/eccube-environment-construction-mariadb/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter3/chapter3-2/eccube-environment-construction-mariadb/</guid><description>MariaDBのインストール手順 1.mariadbのインストール # yum -y install mariadb mariadb-server Loaded plugins: fastestmirror Loading mirror speeds from cached hostfile * epel: nrt.edge.kernel.org * remi-safe: ftp.riken.jp Resolving Dependencies --&amp;gt; Running transaction check ---&amp;gt; Package mariadb.x86_64 1:5.5.64-1.el7 will be installed --&amp;gt; Processing Dependency: mariadb-libs(x86-64)</description></item><item><title>1.ECCUBE Environment Construction - PHP</title><link>http://dev.cyberblack.net/chapter3/chapter3-2/eccube-environment-construction-php/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter3/chapter3-2/eccube-environment-construction-php/</guid><description>PHPのインストール手順 1.epelリポジトリの設定 # yum -y install epel-release Loaded plugins: fastestmirror Loading mirror speeds from cached hostfile * epel: nrt.edge.kernel.org Package epel-release-7-12.noarch already installed and latest version Nothing to do # rpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm Retrieving http://rpms.famillecollet.com/enterprise/remi-release-7.rpm warning: /var/tmp/rpm-tmp.X8785e: Header V4 DSA/SHA1 Signature, key ID 00f97f56: NOKEY Preparing...</description></item><item><title>1.Exercise1 systemd</title><link>http://dev.cyberblack.net/chapter2/chapter2-1/exercise1-systemd/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter2/chapter2-1/exercise1-systemd/</guid><description>1.サービスステータスの確認 1.rootユーザに変更してください。 Answer $ su - パスワード:tokyoec # 2.chronydのサービスのステータ</description></item><item><title>1.Kubernetes Environment Construction - Kubernetes</title><link>http://dev.cyberblack.net/chapter3/chapter3-6/kubernetes-environment-construction-kubernetes/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter3/chapter3-6/kubernetes-environment-construction-kubernetes/</guid><description> 1.Kubernetes Environment Construction - Kubernetes</description></item><item><title>1.WordPress Environment Construction - Nginx</title><link>http://dev.cyberblack.net/chapter3/chapter3-1/wp-environment-construction-nginx/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter3/chapter3-1/wp-environment-construction-nginx/</guid><description>Nginxのインストール手順 1.epelリポジトリの設定 # yum -y install epel-release Loaded plugins: fastestmirror Determining fastest mirrors epel/x86_64/metalink | 8.4 kB 00:00 * epel: ftp.jaist.ac.jp base | 3.6 kB 00:00 epel | 5.3 kB 00:00 extras | 2.9 kB 00:00 updates | 2.9 kB 00:00 (1/7): epel/x86_64/group_gz |</description></item><item><title>2.Ansible Environment Construction - Ansible-Server</title><link>http://dev.cyberblack.net/chapter3/chapter3-3/ansible-environment-construction-ansible-server/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter3/chapter3-3/ansible-environment-construction-ansible-server/</guid><description>ansible-serverの作成手順 ansible-server作業 1.ansibleのインストール # yum -y install ansible Loaded plugins: fastestmirror Determining fastest mirrors epel/x86_64/metalink | 8.8 kB 00:00 * epel: ftp.iij.ad.jp</description></item><item><title>2.DNS Server Construction</title><link>http://dev.cyberblack.net/chapter2/chapter2-1/dns-server-construction/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter2/chapter2-1/dns-server-construction/</guid><description>事前作業 1.studentユーザでログインして、rootユーザに変更します。 $ su - パスワード:tokyoec # DNSサーバの構築テキスト Ce</description></item><item><title>2.Kubernetes Environment Construction - kubectl</title><link>http://dev.cyberblack.net/chapter3/chapter3-6/kubernetes-environment-construction-kubectl/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter3/chapter3-6/kubernetes-environment-construction-kubectl/</guid><description> 2.Kubernetes Environment Construction - kubectl</description></item><item><title>2.WordPress Environment Construction - PHP</title><link>http://dev.cyberblack.net/chapter3/chapter3-1/wp-environment-construction-php/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter3/chapter3-1/wp-environment-construction-php/</guid><description>PHPのインストール手順 1.PHP7系のインストール # yum -y install --enablerepo=epel,remi-php72 php php-mbstring php-pear php-fpm php-mcrypt php-mysql Loaded plugins: fastestmirror Loading mirror speeds from cached hostfile * epel: ftp.jaist.ac.jp * remi-php72: ftp.riken.jp * remi-safe: ftp.riken.jp Package php-mcrypt is obsoleted by php-pecl-mcrypt, trying to install php-pecl-mcrypt-1.0.3-1.el7.remi.7.2.x86_64 instead Package php-mysql is obsoleted</description></item><item><title>3.Ansible Environment Construction - Playbook &amp; WordPress</title><link>http://dev.cyberblack.net/chapter3/chapter3-3/ansible-environment-construction-playbook-wp/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter3/chapter3-3/ansible-environment-construction-playbook-wp/</guid><description>Playbookの作成・WordPress環境構築手順 ansible-server作業 1.wordpress.ymlの作成 ※「hosts: a</description></item><item><title>3.Kubernetes Environment Construction - Kubernetes &amp; WordPress</title><link>http://dev.cyberblack.net/chapter3/chapter3-6/kubernetes-environment-construction-kubernetes-wp/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter3/chapter3-6/kubernetes-environment-construction-kubernetes-wp/</guid><description> 3.Kubernetes Environment Construction - Kubernetes &amp;amp; WordPress</description></item><item><title>3.Proxy Server Construction</title><link>http://dev.cyberblack.net/chapter2/chapter2-1/proxy-server-construction/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter2/chapter2-1/proxy-server-construction/</guid><description>事前作業 1.studentユーザでログインして、rootユーザに変更します。 $ su - パスワード:tokyoec # PROXYサーバの構築テキスト</description></item><item><title>3.WordPress Environment Construction - MariaDB</title><link>http://dev.cyberblack.net/chapter3/chapter3-1/wp-environment-construction-mariadb/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter3/chapter3-1/wp-environment-construction-mariadb/</guid><description>MariaDBのインストール手順 1.mariadbのインストール # yum -y install mariadb mariadb-server Loaded plugins: fastestmirror Loading mirror speeds from cached hostfile * epel: ftp.jaist.ac.jp * remi-safe: ftp.riken.jp Resolving Dependencies --&amp;gt; Running transaction check ---&amp;gt; Package mariadb.x86_64 1:5.5.64-1.el7 will be installed --&amp;gt; Processing Dependency: mariadb-libs(x86-64)</description></item><item><title>4.ECCUBE Environment Construction - ECCUBE</title><link>http://dev.cyberblack.net/chapter3/chapter3-2/eccube-environment-construction-eccube/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter3/chapter3-2/eccube-environment-construction-eccube/</guid><description>EC-CUBEのインストール手順 1.EC-CUBEのダウンロード # cd /var/www/html # wget http://downloads.ec-cube.net/src/eccube-4.0.3.zip --2020-03-31 14:56:31-- http://downloads.ec-cube.net/src/eccube-4.0.3.zip Resolving downloads.ec-cube.net (downloads.ec-cube.net)... 52.219.68.82 Connecting to downloads.ec-cube.net (downloads.ec-cube.net)|52.219.68.82|:80... connected. HTTP request sent, awaiting response... 200 OK Length: 43604415 (42M) [application/zip] Saving to: ‘eccube</description></item><item><title>4.Web Server Construction</title><link>http://dev.cyberblack.net/chapter2/chapter2-1/web-server-construction/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter2/chapter2-1/web-server-construction/</guid><description>事前作業 1.studentユーザでログインして、rootユーザに変更します。 $ su - パスワード:tokyoec # 1.Apacheのインストール</description></item><item><title>4.WordPress Environment Construction - WordPress</title><link>http://dev.cyberblack.net/chapter3/chapter3-1/wp-environment-construction-wordpress/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter3/chapter3-1/wp-environment-construction-wordpress/</guid><description>1.WordPressのインストール手順 1.WordPress最新版のダウンロード # cd /usr/share/nginx/html/ # wget https://ja.wordpress.org/latest-ja.tar.gz --2020-02-12 15:08:35-- https://ja.wordpress.org/latest-ja.tar.gz Resolving ja.wordpress.org (ja.wordpress.org)... 198.143.164.252 Connecting to ja.wordpress.org (ja.wordpress.org)|198.143.164.252|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 12479892 (12M) [application/octet-stream]</description></item><item><title>5.PHP Environment Construction</title><link>http://dev.cyberblack.net/chapter2/chapter2-1/php-environment-construction/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter2/chapter2-1/php-environment-construction/</guid><description>事前作業 1.studentユーザでログインして、rootユーザに変更します。 $ su - パスワード:tokyoec # 1.phpのインストール Cen</description></item><item><title>6.MariaDB Environment Construction</title><link>http://dev.cyberblack.net/chapter2/chapter2-1/mariadb-environment-construction/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter2/chapter2-1/mariadb-environment-construction/</guid><description>事前作業 1.studentユーザでログインして、rootユーザに変更します。 $ su - パスワード:tokyoec # 1.mariadbのインストー</description></item><item><title>7.WordPress Environment Construction</title><link>http://dev.cyberblack.net/chapter2/chapter2-1/wp-environment-construction/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter2/chapter2-1/wp-environment-construction/</guid><description>事前作業 1.studentユーザでログインして、rootユーザに変更します。 $ su - パスワード:tokyoec # 1.WordPress用のデー</description></item><item><title>8.Exercise2 firewalld</title><link>http://dev.cyberblack.net/chapter2/chapter2-1/exercise2-firewalld/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter2/chapter2-1/exercise2-firewalld/</guid><description>1.firewalldサービスの状態確認 1.rootユーザに変更してください。 Answer $ su - パスワード:tokyoec # 2.firewalld サービスが実行されている</description></item><item><title>9.FTP Server Construction</title><link>http://dev.cyberblack.net/chapter2/chapter2-1/ftp-server-construction/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter2/chapter2-1/ftp-server-construction/</guid><description>事前作業 1.studentユーザでログインして、rootユーザに変更します。 $ su - パスワード:tokyoec # 1.vsftpdのインストール</description></item><item><title>Exercise1 File &amp; Directory</title><link>http://dev.cyberblack.net/chapter1/chapter1-1/exercise1-file-directory/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter1/chapter1-1/exercise1-file-directory/</guid><description>1.pwd,ls,cdコマンド演習 1.現在のディレクトリ（カレントディレクトリ）を表示するコマンドを実行してください。 Answer $ pwd /home/student 2.カレントデ</description></item><item><title>Exercise1 File,Permission,User,Group</title><link>http://dev.cyberblack.net/chapter1/chapter1-2/exercise1-file-permission-user-group/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter1/chapter1-2/exercise1-file-permission-user-group/</guid><description>1.suコマンドとパーミッションの変更 1.studentとしてログインしている状態で、端末を開きます。idコマンドを実行し、現在のユーザを確</description></item><item><title>Exercise1 Network Management</title><link>http://dev.cyberblack.net/chapter1/chapter1-6/exercise1-network-management/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter1/chapter1-6/exercise1-network-management/</guid><description>1.rpmコマンド 1.rootユーザに変更してください。 Answer $ su - パスワード:tokyoec # 2.net-toolsパッケージがインストールさ</description></item><item><title>Exercise1 Prosess &amp; Job Management</title><link>http://dev.cyberblack.net/chapter1/chapter1-3/exercise1-prosess-job-management/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter1/chapter1-3/exercise1-prosess-job-management/</guid><description>1.stressコマンドを用いたジョブの操作 stressコマンドを利用して、フォアグラウンドとバックグラウンドのジョブの切替を確認します。 1</description></item><item><title>Exercise1 rpm &amp; dnf</title><link>http://dev.cyberblack.net/chapter1/chapter1-5/exercise1-rpm-dnf/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter1/chapter1-5/exercise1-rpm-dnf/</guid><description>1.rpmコマンド 1.rootユーザに変更してください。 Answer $ su - パスワード:tokyoec # 2.lsコマンドで以前ダウンロードしたstres</description></item><item><title>Exercise1 Standard input/output &amp; Pipeline</title><link>http://dev.cyberblack.net/chapter1/chapter1-4/exercise1-standard-input-output-pipeline/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter1/chapter1-4/exercise1-standard-input-output-pipeline/</guid><description>1.標準入力、標準出力、標準エラー出力の確認 1.カレントディレクトリをホームディレクトリに変更してください。 Answer $ cd $ pwd /home/student 2.catコマンドと</description></item><item><title>Exercise2 About Bash</title><link>http://dev.cyberblack.net/chapter1/chapter1-4/exercise2-about-bash/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter1/chapter1-4/exercise2-about-bash/</guid><description>1.環境変数とシェル変数 1.カレントディレクトリをホームディレクトリに変更してください。 Answer $ cd $ pwd /home/student 2.「training/linux」構成</description></item><item><title>Exercise2 DNS Command</title><link>http://dev.cyberblack.net/chapter1/chapter1-6/exercise2-dns-command/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter1/chapter1-6/exercise2-dns-command/</guid><description>1.whoisコマンド 1.rootユーザに変更してください。 Answer $ su - パスワード:tokyoec # 2.以下の手順に従ってwhoisコマンドをイ</description></item><item><title>Exercise2 Search of file &amp; Command usage</title><link>http://dev.cyberblack.net/chapter1/chapter1-1/exercise2-search-of-file-command-usage/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter1/chapter1-1/exercise2-search-of-file-command-usage/</guid><description>1.ファイルを検索する 1.rootユーザに変更する手順は以下となります。rootユーザーに変更します。 ※パスワードは入力してもコンソール上に</description></item><item><title>Exercise3 File &amp; Basic operation of directory</title><link>http://dev.cyberblack.net/chapter1/chapter1-1/exercise3-file-basic-operation-of-directory/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter1/chapter1-1/exercise3-file-basic-operation-of-directory/</guid><description>1.ディレクトリの作成と削除 次の図を参照しながら、同じディレクトリ構成を作成してみましょう。 1.ホームディレクトリ（/home/studen</description></item><item><title>Exercise3 grep command &amp; regular expression</title><link>http://dev.cyberblack.net/chapter1/chapter1-4/exercise3-grep-command-regular-expression/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter1/chapter1-4/exercise3-grep-command-regular-expression/</guid><description>1.grepコマンドと正規表現を組み合わせて/etc/passwdを確認する 1./etc/passwdファイルの中で、studentという文</description></item><item><title>Exercise3 Networkmanager</title><link>http://dev.cyberblack.net/chapter1/chapter1-6/exercise3-networkmanager/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter1/chapter1-6/exercise3-networkmanager/</guid><description>1.nmcliコマンド～インターフェイス編～ 1.rootユーザに変更してください。 Answer $ su - パスワード:tokyoec # 2.nmcliコマンド</description></item><item><title>Exercise4 Advanced Text Processing</title><link>http://dev.cyberblack.net/chapter1/chapter1-4/exercise4-advanced-text-processing/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter1/chapter1-4/exercise4-advanced-text-processing/</guid><description>1.sedによる文字列の置き換え 1.vimコマンドで、company.txtという名前で以下の内容が記載されているファイルを作成します。 Google Google</description></item><item><title>Exercise4 Archive &amp; Compress file</title><link>http://dev.cyberblack.net/chapter1/chapter1-1/exercise4-archive-compress-file/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter1/chapter1-1/exercise4-archive-compress-file/</guid><description>1.tarコマンド演習 1.ホームディレクトリ（/home/student）に移動して、カレントディレクトリを確認してください。 Answer $ cd $ pwd /home/student 2</description></item><item><title>Exercise5 Creation and automatic execution of Shell Script</title><link>http://dev.cyberblack.net/chapter1/chapter1-4/exercise5-creation-automatic-execution-of-shell-script/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter1/chapter1-4/exercise5-creation-automatic-execution-of-shell-script/</guid><description>1.シェルスクリプトの作成と自動実行 1.カレントディレクトリをホームディレクトリに変更してください。 Answer $ cd $ pwd /home/student 2.ホームディレクトリにsc</description></item><item><title>Exercise5 Text editor</title><link>http://dev.cyberblack.net/chapter1/chapter1-1/exercise5-text-editor/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter1/chapter1-1/exercise5-text-editor/</guid><description>1.日本語入力準備 日本語入力できるように設定を変更します。 1.Linux仮想マシン上で、[アプリケーション]-[システムツール]-[設定]を</description></item><item><title>Exercise6 Write a Shell Script</title><link>http://dev.cyberblack.net/chapter1/chapter1-4/exercise6-write-a-shell-script/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter1/chapter1-4/exercise6-write-a-shell-script/</guid><description>1.シェル変数の演習 1.カレントディレクトリをホームディレクトリに変更してください。これまでの演習で使用したsample_web.logがあ</description></item><item><title>10.HTML &amp; CSS</title><link>http://dev.cyberblack.net/chapter2/chapter2-1/html-css/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter2/chapter2-1/html-css/</guid><description>1.自己紹介ページの作成 自己紹介ページを作成してみましょう。 1.模範解答 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;ja&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;自己紹介&amp;lt;/title</description></item><item><title>11.Javascript</title><link>http://dev.cyberblack.net/chapter2/chapter2-1/javascript/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter2/chapter2-1/javascript/</guid><description>1.都道府県のドロップボックス作成 for文と配列を組み合わせて右のような都道府県ドロップボックスを作成してみましょう。 1.模範解答 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;ja&amp;#34;&amp;gt; &amp;lt;head&amp;gt;</description></item><item><title>12.Infrastructure as Code</title><link>http://dev.cyberblack.net/chapter2/chapter2-1/infrastructure-as-code/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter2/chapter2-1/infrastructure-as-code/</guid><description>事前作業 1.studentユーザでログインして、rootユーザに変更します。 $ su - パスワード:tokyoec # 2.Nginxアンインストール</description></item><item><title>13.Docker</title><link>http://dev.cyberblack.net/chapter2/chapter2-1/docker/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter2/chapter2-1/docker/</guid><description>事前作業 1.studentユーザでログインして、rootユーザに変更します。 $ su - パスワード:tokyoec # Dockerのインストール 1.</description></item><item><title>14.Docker Compose</title><link>http://dev.cyberblack.net/chapter2/chapter2-1/docker-compose/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter2/chapter2-1/docker-compose/</guid><description>事前作業 1.studentユーザでログインして、rootユーザに変更します。 $ su - パスワード:tokyoec # Docker Composeのインストール</description></item><item><title>15.Kubernetes kubectl</title><link>http://dev.cyberblack.net/chapter2/chapter2-1/kubernetes-kubectl/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter2/chapter2-1/kubernetes-kubectl/</guid><description> 15.Kubernetes kubectl</description></item><item><title>16.Kubernetes WordPress</title><link>http://dev.cyberblack.net/chapter2/chapter2-1/kubernetes-wordpress/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>http://dev.cyberblack.net/chapter2/chapter2-1/kubernetes-wordpress/</guid><description> 16.Kubernetes WordPress</description></item></channel></rss>